from champion_class.models import BaseClass, MiniDescriptions, SpecificColumn, Level, Ability, SpellSlot


def arch_one(bard):
    arch, _ = bard.archetypes.get_or_create(
        name="Коллегия доблести",
    )
    arch.description = """Барды коллегии доблести это отважные скальды, чьи сказания не дают забыть великих героев прошлого и вдохновляют на подвиги нынешних героев. Такие барды собираются в медовых залах или вокруг походных костров, чтоб воспеть великие свершения прошлого и настоящего. Они путешествуют, чтобы стать очевидцами великих событий, и не дать памяти о них угаснуть. Своими песнями они вдохновляют на достижения, достойные памяти предков."""
    arch.save()
    # Данные о способностях для мистического ловкача
    abilities_data = [
        {"level": 3, "name": "ДОПОЛНИТЕЛЬНЫЕ НАВЫКИ",
         "description": "Присоединяясь к коллегии доблести, вы получаете владение средними доспехами, щитами и воинским оружием."},
        {"level": 3, "name": "БОЕВОЕ ВДОХНОВЕНИЕ",
         "description": "Вы узнаёте, как вдохновлять других в бою. Существо, получившее от вас кость бардовского вдохновения, может бросить эту кость и добавить результат к своему броску урона оружием. В качестве альтернативы, если существо атаковано, оно может реакцией совершить бросок кости вдохновения и добавить результат к своему КД от этой атаки. Оно может сделать это после броска атаки, но до того, как узнает, попали ли по нему."},
        {"level": 6, "name": "ДОПОЛНИТЕЛЬНАЯ АТАКА",
         "description": "Если вы в свой ход совершаете действие Атака, вы можете совершить две атаки вместо одной."},
        {"level": 14, "name": "БОЕВАЯ МАГИЯ",
         "description": "Вы научились сплетать использование заклинаний и оружия в одно гармоничное действие. Если вы действием используете заклинание барда, вы можете бонусным действием совершить одну атаку оружием."},
    ]
    for level_num in range(1, 21):
        proficiency_bonus = (level_num - 1) // 4 + 2
        level, _ = Level.objects.get_or_create(
            archetype=arch,
            level=level_num,
            proficiency_bonus=proficiency_bonus,
        )
    for ability_info in abilities_data:
        level,_ = Level.objects.get_or_create(archetype=arch, level=ability_info["level"])
        Ability.objects.get_or_create(
            level_id=level,
            name=ability_info["name"],
            description=ability_info["description"]
        )
    return

def arch_two(bard):
    arch,_ = bard.archetypes.get_or_create(
        name="Коллегия знаний",
    )
    arch.description = """Барды коллегии знаний понемногу осведомлены обо всём на свете. Они собирают крупицы знаний отовсюду, будь то научные труды или крестьянские побасенки. Напевают ли они народные баллады в таверне, или исполняют изысканные композиции при дворе, эти барды используют свой талант, чтобы очаровать публику. И когда смолкают аплодисменты, публика может обнаружить себя рассказывающей все свои секреты, начиная со сплетен местного прихода, и заканчивая подробностями своей верности королю.

Лояльность таких бардов покоится на стремлении к красоте и правде, а не на верности монархам или приверженности к религиозным догматам. Дворяне, содержащие таких бардов в качестве советников или герольдов, хорошо знают, что бард скорее скажет неприятную правду, чем благоразумно промолчит.

Члены коллегии собираются в библиотеках, а иногда даже в колледжах, с настоящими классами и общежитиями. Там они делятся друг с другом знаниями. Они также посещают фестивали и общественные собрания, где могут выявлять растратчиков, разоблачать лжецов или выставлять на посмешище самоуверенных политиков."""
    arch.save()
    # Данные о способностях для мистического ловкача
    abilities_data = [
        {"level": 3, "name": "ДОПОЛНИТЕЛЬНЫЕ НАВЫКИ",
         "description": "Если вы присоединяетесь к коллегии знаний, вы овладеваете тремя навыками на ваш выбор."},
        {"level": 3, "name": "ОСТРОЕ СЛОВЦО", "description": "Вы узнаёте, как использовать собственное остроумие, чтобы отвлечь, "
                                                             "смутить или по-другому подорвать способности и уверенность противников. Если существо, которое вы можете видеть, в пределах 60 футов от вас совершает бросок атаки, урона или проверку характеристики, вы можете реакцией потратить одну из ваших костей бардовского вдохновения, и вычесть результат броска этой кости из броска этого существа. Вы можете принять решение об использовании этого умения после броска существа, но до того момента, когда Мастер объявит результат броска или проверки. Существо не подвержено этому умению, если не может слышать вас, или обладает иммунитетом к очарованию."},
        {"level": 6, "name": "ДОПОЛНИТЕЛЬНЫЕ ТАЙНЫ МАГИИ",
         "description": "Вы можете выучить 2 заклинания из доступных любому классу на свой выбор. Их уровень не должен превышать уровня заклинаний, которые вы можете использовать на этом уровне, как показано в таблице Барда. Они также могут быть заговорами. Выбранные заклинания теперь считаются для вас заклинаниями барда, но они не учитываются в общем количестве известных вам заклинаний барда."},
        {"level": 14, "name": "НЕПРЕВЗОЙДЁННЫЙ НАВЫК",
         "description": "Если вы совершаете проверку характеристики, вы можете бросить кость бардовского вдохновения и добавить результат к проверке. Вы можете принять решение об использовании этого умения после броска проверки, но до того, как Мастер объявит результат этой проверки."},
    ]

    for level_num in range(1, 21):
        proficiency_bonus = (level_num - 1) // 4 + 2
        Level.objects.get_or_create(
            archetype=arch,
            level=level_num,
            proficiency_bonus=proficiency_bonus,
        )

    for ability_info in abilities_data:
        level,_ = Level.objects.get_or_create(archetype=arch, level=ability_info["level"])
        Ability.objects.get_or_create(
            level_id=level,
            name=ability_info["name"],
            description=ability_info["description"]
        )

    return