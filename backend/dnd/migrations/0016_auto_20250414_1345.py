from django.db import migrations


def create_human(apps, schema_editor):
    Background = apps.get_model("dnd", "Background")
    SkillsProficiency = apps.get_model("dnd", "SkillsProficiency")
    Feature = apps.get_model("dnd", "Feature")
    FeatureOption = apps.get_model("dnd", "FeatureOption")
    Trait = apps.get_model("dnd", "Trait")
    Ideal = apps.get_model("dnd", "Ideal")
    Bond = apps.get_model("dnd", "Bond")
    Flaw = apps.get_model("dnd", "Flaw")

    background = Background.objects.create(
        name="Моряк",
        description="""Вы много лет плавали на морском судне. Вы видели могучие шторма, глубоководных чудовищ и тех, кто хотел отправить вас на дно. Первая любовь осталась далеко за горизонтом, и настало время попробовать что-то новое.

Решите вместе с Мастером, на каком корабле вы до этого плавали. Это было торговое, пассажирское, исследовательское или пиратское судно? Насколько оно прославилось (в хорошем или дурном смысле)? Много ли вы путешествовали? Оно всё еще на плаву, потоплено или утеряно?

Кем вы были на борту — боцманом, капитаном, лоцманом, коком или кем-то другим? Кем были капитан и его первый помощник? Вы расстались с экипажем в хороших отношениях или поссорились с ними?""",

    )

    small_features_data = [
        {"name": "Владение навыками", "skills_proficiency": "Атлетика, Восприятие."},
        {"name": "Владение инструментами", "skills_proficiency": "Инструменты навигатора, транспорт (водный)."},
        {"name": "Снаряжение",
         "skills_proficiency": "Кофель-нагель (дубинка), 50 футов шёлковой верёвки, талисман, такой как кроличья лапка или камень с дыркой (можете совершить бросок по таблице безделушек), комплект обычной одежды, поясной кошель с 10 зм."},
    ]

    for small_features in small_features_data:
        SkillsProficiency.objects.create(
            name=small_features["name"],
            skills_proficiency=small_features["skills_proficiency"],
            background_id=background,
        )

    # # ____
    # # ___
    Feature.objects.create(
        background=background,
        name="УМЕНИЕ: ПОЕЗДКА НА КОРАБЛЕ",
        description="""Если понадобится, вы можете получить бесплатную поездку на паруснике для себя и своих спутников. Это может быть ваш старый корабль, или другой корабль, с которым вы находитесь в хороших отношениях (возможно, им командует ваш бывший напарник). Вам оказывают услугу, поэтому вы не можете устанавливать распорядок и прокладывать маршрут. Мастер сообщит, сколько времени уйдёт на плавание. В обмен на бесплатную поездку от вас и ваших спутников ожидают посильную помощь экипажу во время плавания.""",
    )

    # Создаем черты характера
    traits_data = [
        "Друзья знают, что всегда могут на меня положиться.",
        "Я усердно тружусь, чтобы потом можно было хорошо отдохнуть.",
        "Мне нравится заходить в новые порты и находить друзей за кружечкой эля.",
        "Я готов приврать, чтобы получился хороший рассказ.",
        "Для меня драка в таверне — отличный способ познакомиться с новым городом.",
        "Я никогда не откажусь от пари.",
        "Я ругаюсь как банда орков.",
        "Мне нравится, когда работа выполнена, особенно если её можно поручить другому."
    ]

    for trait_name in traits_data:
        Trait.objects.create(
            background=background,
            name=trait_name
        )

    # Создаем идеалы
    ideals_data = [
        "Уважение. Корабль держится целым благодаря взаимному уважению капитана и экипажа. (Добрый)",
        "Справедливость. Все мы делаем одно дело, и награду должны делить поровну. (Законный)",
        "Свобода. Море это свобода — свобода идти куда угодно и делать что угодно. (Хаотичный)",
        "Власть. Я хищник, а другие корабли в море — моя добыча. (Злой)",
        "Команда. Я предан экипажу, а не идеалам. (Нейтральный)",
        "Стремление. Когда-нибудь у меня будет свой корабль, и я проложу курс куда захочу. (Любой)"
    ]

    for ideal_name in ideals_data:
        Ideal.objects.create(
            background=background,
            name=ideal_name
        )

    # Создаем привязанности
    bonds_data = [
        "В первую очередь я верен своему капитану, всё остальное вторично.",
        "Самое важное — это корабль, а экипаж и капитаны постоянно меняются.",
        "Я всегда буду помнить свой первый корабль.",
        "В гавани у меня есть возлюбленная, глаза которой стоят того, чтобы оставить ради неё море.",
        "Как-то раз мне выплатили не полную долю с дохода, и я хочу вернуть себе причитающееся.",
        "Безжалостные пираты убили моего капитана и почти всю команду, разграбили корабль, и оставили меня умирать. Месть будет страшной."
    ]

    for bond_name in bonds_data:
        Bond.objects.create(
            background=background,
            name=bond_name
        )

    # Создаем слабости
    flaws_data = [
        "Я выполняю приказы, даже если считаю, что они несправедливые.",
        "Я наплету с три короба, лишь бы не делать лишнюю работу.",
        "Когда кто-то бросает мне вызов, я никогда не отступлюсь, какой бы опасной не была ситуация.",
        "Начав пить, я не могу остановиться.",
        "Не могу ничего поделать, но деньги у меня не задерживаются.",
        "Моя гордость меня когда-нибудь погубит."
    ]

    for flaw_name in flaws_data:
        Flaw.objects.create(
            background=background,
            name=flaw_name
        )


class Migration(migrations.Migration):
    operations = [
        migrations.RunPython(create_human),
    ]

    dependencies = [
        ('dnd', '0015_auto_20250413_1218'),
    ]

