# Generated by Django 5.1.4 on 2025-01-22 19:06

import django.core.validators
import django.db.models.deletion
import dnd.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Archetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название архетипа')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание архетипа')),
            ],
        ),
        migrations.CreateModel(
            name='BackgroundModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personality_traits', models.CharField(default='черты характера', max_length=1500)),
                ('ideals', models.CharField(default='идеалы', max_length=1500)),
                ('bonds', models.CharField(default='узы', max_length=1500)),
                ('flaws', models.CharField(default='недостатки', max_length=1500)),
            ],
        ),
        migrations.CreateModel(
            name='BaseClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название класса')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание класса')),
                ('hit_dice', models.CharField(blank=True, max_length=10, null=True, verbose_name='Кость хитов')),
            ],
        ),
        migrations.CreateModel(
            name='Ideal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Properties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProtectStateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protect_state_strength', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('protect_state_dexterity', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('protect_state_constitution', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('protect_state_intelligence', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('protect_state_wisdom', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('protect_state_charisma', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Rarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SkillStateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athletics', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('acrobatics', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('sleight_of_hand', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('stealth', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('arcana', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('history', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('investigation', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('nature', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('religion', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('animal_handling', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('insight', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('medicine', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('perception', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('survival', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('deception', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('intimidation', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('performance', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('persuasion', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='SubType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='WorldOutlook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArchetypeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(verbose_name='Уровень')),
                ('archetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='dnd.archetype', verbose_name='Архетип')),
            ],
            options={
                'ordering': ['archetype', 'level'],
                'unique_together': {('archetype', 'level')},
            },
        ),
        migrations.CreateModel(
            name='ArchetypeAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название способности')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание способности')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='dnd.archetypelevel', verbose_name='Уровень')),
            ],
        ),
        migrations.CreateModel(
            name='ArchetypeSpecificColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название специфического столбца')),
                ('archetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_columns', to='dnd.archetype', verbose_name='Архетип')),
            ],
        ),
        migrations.AddField(
            model_name='archetype',
            name='character_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archetypes', to='dnd.baseclass', verbose_name='Класс'),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_champion', models.CharField(blank=True, default='Безымянный герой', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lvl', models.IntegerField(blank=True, default=1)),
                ('experience', models.IntegerField(blank=True, default=0)),
                ('ProficienciesAndLanguages', models.CharField(default='Список навыков и языков', max_length=4000)),
                ('max_hit', models.PositiveSmallIntegerField(default=0)),
                ('temp_hit', models.PositiveSmallIntegerField(default=0)),
                ('current_hit', models.PositiveSmallIntegerField(default=0)),
                ('strength', models.PositiveSmallIntegerField(blank=True, default=10, verbose_name='Сила')),
                ('dexterity', models.PositiveSmallIntegerField(blank=True, default=10, verbose_name='Ловкость')),
                ('constitution', models.PositiveSmallIntegerField(blank=True, default=10, verbose_name='Телосложение')),
                ('intelligence', models.PositiveSmallIntegerField(blank=True, default=10, verbose_name='Интиллект')),
                ('wisdom', models.PositiveSmallIntegerField(blank=True, default=10, verbose_name='Мудрость')),
                ('charisma', models.PositiveSmallIntegerField(blank=True, default=10, verbose_name='Харизма')),
                ('possession_bonus', models.PositiveSmallIntegerField(default=2, verbose_name='bonus')),
                ('inspiration', models.PositiveSmallIntegerField(default=0)),
                ('protection_class', models.PositiveSmallIntegerField(default=10, verbose_name='kz')),
                ('speed', models.PositiveSmallIntegerField(default=30, verbose_name='speed_ch')),
                ('account', models.ForeignKey(default='settings.AUTH_USER_MODEL', on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL)),
                ('archetype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dnd.archetype', verbose_name='Архетип')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd.backgroundmodel')),
                ('champion_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dnd.baseclass')),
            ],
            options={
                'verbose_name': 'пресонаж',
                'verbose_name_plural': 'персонажи',
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_items', to='dnd.character')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd.item')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(verbose_name='Уровень')),
                ('proficiency_bonus', models.PositiveIntegerField(verbose_name='Бонус мастерства')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='dnd.baseclass', verbose_name='Класс')),
            ],
            options={
                'ordering': ['class_obj', 'level'],
                'unique_together': {('class_obj', 'level')},
            },
        ),
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название способности')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание способности')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='dnd.level', verbose_name='Уровень')),
            ],
        ),
        migrations.CreateModel(
            name='Origin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=100)),
                ('ideals', models.ManyToManyField(related_name='origins', to='dnd.ideal')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='my_origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dnd.origin'),
        ),
        migrations.AddField(
            model_name='character',
            name='protect_state',
            field=models.ForeignKey(default=dnd.models.ProtectStateModel.default_protect_state, on_delete=django.db.models.deletion.CASCADE, to='dnd.protectstatemodel'),
        ),
        migrations.AddField(
            model_name='character',
            name='race',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dnd.race'),
        ),
        migrations.AddField(
            model_name='item',
            name='rarity',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.rarity'),
        ),
        migrations.AddField(
            model_name='character',
            name='skill_state',
            field=models.ForeignKey(default=dnd.models.SkillStateModel.default_skill_state, on_delete=django.db.models.deletion.CASCADE, to='dnd.skillstatemodel'),
        ),
        migrations.CreateModel(
            name='SpecificColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название специфического столбца')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_columns', to='dnd.baseclass', verbose_name='Класс')),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=100, verbose_name='ссылка')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('lvl', models.CharField(max_length=15, verbose_name='уровень')),
                ('school', models.CharField(max_length=60, verbose_name='школа')),
                ('time_cast', models.CharField(max_length=200, verbose_name='время накладывания')),
                ('distance', models.CharField(max_length=100, verbose_name='дистанция')),
                ('components', models.CharField(max_length=400, verbose_name='компоненты')),
                ('timing', models.CharField(max_length=100, verbose_name='Длительность')),
                ('origin', models.CharField(blank=True, max_length=100, null=True, verbose_name='источник')),
                ('instruction', models.TextField(verbose_name='описание')),
                ('archetype', models.ManyToManyField(blank=True, related_name='archetype_spells', to='dnd.archetype')),
                ('class_actor', models.ManyToManyField(blank=True, related_name='class_spells', to='dnd.baseclass')),
            ],
            options={
                'verbose_name': 'Заклинание',
                'verbose_name_plural': 'Заклинания',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='character',
            name='spells',
            field=models.ManyToManyField(blank=True, related_name='my_spells', to='dnd.spell'),
        ),
        migrations.CreateModel(
            name='MagicItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homebrew', models.BooleanField(default=False)),
                ('price', models.CharField(blank=True, default='-', max_length=200, null=True)),
                ('source', models.CharField(blank=True, default='-', max_length=200, null=True)),
                ('customization', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='-', max_length=3000, null=True)),
                ('detailCustamization', models.CharField(blank=True, default='-', max_length=200, null=True)),
                ('detailType', models.CharField(blank=True, default='-', max_length=200, null=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='magic_item', to='dnd.item')),
                ('sub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='magic_item_type', to='dnd.subtype')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homebrew', models.BooleanField(default=False)),
                ('price', models.CharField(blank=True, default='-', max_length=200, null=True)),
                ('source', models.CharField(blank=True, default='-', max_length=200, null=True)),
                ('weight', models.CharField(blank=True, default='-', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='-', max_length=3000, null=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='dnd.item')),
                ('sub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='dnd.subtype')),
            ],
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homebrew', models.BooleanField(default=False)),
                ('disadvantage', models.BooleanField(default=False)),
                ('armore', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.CharField(blank=True, max_length=200, null=True)),
                ('weight', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=3000, null=True)),
                ('requirement', models.CharField(blank=True, max_length=10, null=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='armor', to='dnd.item')),
                ('sub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='armor', to='dnd.subtype')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.typeitem'),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homebrew', models.BooleanField(default=False)),
                ('damage', models.CharField(blank=True, max_length=10, null=True)),
                ('damage_type', models.CharField(blank=True, max_length=200, null=True)),
                ('price', models.CharField(blank=True, max_length=200, null=True)),
                ('weight', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=3000, null=True)),
                ('special', models.CharField(blank=True, max_length=3000, null=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weapon', to='dnd.item')),
                ('properties', models.ManyToManyField(blank=True, to='dnd.properties')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.subtype')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='world_outlook',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dnd.worldoutlook'),
        ),
        migrations.CreateModel(
            name='ArchetypeSpecificColumnValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField(verbose_name='Значение')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_column_values', to='dnd.archetypelevel', verbose_name='Уровень')),
                ('specific_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='dnd.archetypespecificcolumn', verbose_name='Специфический столбец')),
            ],
            options={
                'unique_together': {('specific_column', 'level')},
            },
        ),
        migrations.CreateModel(
            name='SpecificColumnValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField(verbose_name='Значение')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_column_values', to='dnd.level', verbose_name='Уровень')),
                ('specific_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='dnd.specificcolumn', verbose_name='Специфический столбец')),
            ],
            options={
                'unique_together': {('specific_column', 'level')},
            },
        ),
    ]
