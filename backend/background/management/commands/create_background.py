from django.core.management import BaseCommand

from background.models import Background, SkillsProficiency, Feature, FeatureOption, Trait, Ideal, Bond, Flaw


class Command(BaseCommand):
    def handle(self, *args, **options):
        background,_ = Background.objects.get_or_create(
            name="Артист",
            description="""Вам нравится выступать на публике. Вы знаете, как их развлечь, очаровать и даже воодушевить. Ваша поэзия может трогать сердца слушателей, пробуждать в них горе или радость, смех или гнев. Ваша музыка ободряет их или заставляет скорбеть. Ваши танцы захватывают, а шутки всегда смешны. Чем бы вы ни занимались, ваша жизнь тесно связана с искусством.""",

        )

        small_features_data = [
            {"name": "Владение навыками", "skills_proficiency": "Выживание, Уход за животными"},
            {"name": "Владение инструментами", "skills_proficiency": "Один вид ремесленных инструментов, транспортное средство (наземное)."},
            {"name": "Снаряжение",
             "skills_proficiency": "Ремесленные инструменты (один вид на ваш выбор), лопата, железный горшок, комплект обычной одежды, поясной кошель с 10 зм"},
        ]

        for small_features in small_features_data:
            SkillsProficiency.objects.create(
                name=small_features["name"],
                skills_proficiency=small_features["skills_proficiency"],
                background_id=background,
            )

        defining_event_feature = Feature.objects.create(
            background=background,
            name="Определяющее событие",
            description="""Вы занимались обычным делом для деревенщины. Возможно, вы возделывали землю, трудились в шахте, прислуживали дворянину, пасли скот, рубили деревья или копали могилы. Но потом произошло нечто, втянувшее вас в великие события. Выберите или определите случайно определяющее событие, сделавшее вас героем среди своего народа.""",
            has_choice=True  # У этой особенности есть выбор
        )

        # Добавляем варианты для особенности "Определяющее событие"
        event_options = [
            "Я дал отпор прислужникам тирана.",
            "Я спас народ от природного катаклизма.",
            "Я сразился один на один с ужасным чудищем.",
            "Я обокрал продажного торговца, чтобы помочь бедным.",
            "Я возглавил ополчение, отбросившее врага.",
            "Я вломился в замок тирана и украл оружие для своего народа.",
            "Я учил крестьян, как использовать обычные инструменты в качестве оружия против солдат тирана.",
            "Лорд отменил непопулярный закон после того как я выступил с акцией протеста.",
            "Небожитель, фея или другое подобное существо благословило меня или открыло тайну моего рождения.",
            "Вступив в армию лорда, я получил хорошее звание и заслужил благодарности."
        ]

        for option in event_options:
            FeatureOption.objects.create(
                feature=defining_event_feature,
                name=option
            )

        # ____
        # ___
        Feature.objects.create(
            background=background,
            name="УМЕНИЕ: ДЕРЕВЕНСКОЕ ГОСТЕПРИИМСТВО",
            description="""Вы сами из простого народа, и потому легко находите с ними общий язык. Вы можете найти место, чтобы спрятаться, отдохнуть или подлечиться среди обывателей, если только вы не угрожаете им. Они укроют вас от представителей закона и тех, кто ищет вас, но своими жизнями за вас они рисковать не будут.""",
        )

        # Создаем черты характера
        traits_data = [
            "Я сужу других по поступкам, а не словам.",
            "Если кто-то в беде, я всегда готов прийти на помощь.",
            "Задумав что-то, я прямолинейно иду к цели, невзирая на помехи.",
            "У меня обострённое чувство справедливости, и в споре я всегда ищу самого честного решения.",
            "Я уверен в своих способностях, и стараюсь внушить такую же уверенность в других.",
            "Пусть думают другие. Я предпочитаю действовать.",
            "Я неправильно произношу длинные слова, когда пытаюсь выглядеть умнее.",
            "Я быстро устаю. Когда уже я найду свою судьбу?"
        ]

        for trait_name in traits_data:
            Trait.objects.create(
                background=background,
                name=trait_name
            )

        # Создаем идеалы
        ideals_data = [
            "Уважение. Нужно относиться друг к другу с достоинством и уважением. (Добрый)",
            "Справедливость. Закон не должен делать ни для кого исключений, и никто не может стать выше закона. (Законный)",
            "Свобода. Тираны не должны угнетать народ. (Хаотичный)",
            "Мощь. Если я стану сильным, я смогу брать то, что захочу — и я это заслуживаю. (Злой)",
            "Искренность. Нет ничего хорошего в том, что ты притворяешься тем, кем не являешься. (Нейтральный)",
            "Судьба. Никто и ничто не собьёт меня с пути к высшему призванию. (Любое)"
        ]

        for ideal_name in ideals_data:
            Ideal.objects.create(
                background=background,
                name=ideal_name
            )

        # Создаем привязанности
        bonds_data = [
            "У меня есть семья, но я не знаю, где она. Надеюсь, когда-нибудь я увижу их вновь.",
            "Я работал на земле, я люблю землю, и я буду защищать землю.",
            "Один благородный меня дико поколотил, и я вымещаю свой гнев на всех встреченных задирах.",
            "Мои инструменты — символ моей былой жизни, и я ношу их, чтобы не забывать корни.",
            "Я защищаю тех, кто не может защитить себя сам.",
            "Хотел бы я, чтобы та, кого я любил в детстве, разделила со мной судьбу."
        ]

        for bond_name in bonds_data:
            Bond.objects.create(
                background=background,
                name=bond_name
            )

        # Создаем слабости
        flaws_data = [
            "Тиран, правящий моими землями, ни перед чем не остановится, лишь бы убить меня.",
            "Я слепо верю в своё предназначение, и не замечаю ни своих недостатков, ни смертельных опасностей.",
            "Те, кто знают меня молодым, знают и мою самую постыдную тайну, так что я никогда не вернусь домой.",
            "Я беззащитен перед пороками большого города, особенно перед пьянством.",
            "Я тайно считаю, что было бы хорошо стать тираном, правящим землями.",
            "Я не доверяю союзникам."
        ]

        for flaw_name in flaws_data:
            Flaw.objects.create(
                background=background,
                name=flaw_name
            )