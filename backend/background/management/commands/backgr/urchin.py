from background.models import Background, SkillsProficiency, Feature, Trait, Ideal, Bond, Flaw


def artist():
    background, _ = Background.objects.get_or_create(
        name="Беспризорник",
        description="""Вы выросли на улице в бедности и одиночестве, лишённые родителей. Никто не присматривал и не заботился о вас, и вам пришлось научиться делать это самому. Вам приходилось постоянно бороться за еду и следить за другими неприкаянными душами, способными обокрасть вас. Вы спали на чердаках и в переулках, мокли под дождём и боролись с болезнями, не получая медицинской помощи или приюта. Вы выжили, невзирая на все трудности, и сделали это благодаря своей сноровке, силе или скорости.

Вы начинаете приключение с суммой денег, достаточной, чтоб скромно, но уверенно прожить десять дней. Как вы получили эти деньги? Что позволило вам перейти к нормальной жизни, преодолев нищету?""",

    )

    small_features_data = [
        {"name": "Владение навыками", "skills_proficiency": "Ловкость рук, Скрытность."},
        {"name": "Владение инструментами", "skills_proficiency": "Воровские инструменты, набор для грима."},
        {"name": "Снаряжение",
         "skills_proficiency": "Маленький нож, карта города, в котором вы выросли, ручная мышь, безделушка в память о родителях, комплект обычной одежды, поясной кошель с 10 зм"}
        , ]

    for small_features in small_features_data:
        SkillsProficiency.objects.get_or_create(
            name=small_features["name"],
            skills_proficiency=small_features["skills_proficiency"],
            background_id=background,
        )

    # defining_event_feature = Feature.objects.get_or_create(
    #     background=background,
    #     name="Определяющее событие",
    #     description="""Вы занимались обычным делом для деревенщины. Возможно, вы возделывали землю, трудились в шахте, прислуживали дворянину, пасли скот, рубили деревья или копали могилы. Но потом произошло нечто, втянувшее вас в великие события. Выберите или определите случайно определяющее событие, сделавшее вас героем среди своего народа.""",
    #     has_choice=True  # У этой особенности есть выбор
    # )

    # Добавляем варианты для особенности "Определяющее событие"
    # event_options = [
    #     "Я дал отпор прислужникам тирана.",
    #     "Я спас народ от природного катаклизма.",
    #     "Я сразился один на один с ужасным чудищем.",
    #     "Я обокрал продажного торговца, чтобы помочь бедным.",
    #     "Я возглавил ополчение, отбросившее врага.",
    #     "Я вломился в замок тирана и украл оружие для своего народа.",
    #     "Я учил крестьян, как использовать обычные инструменты в качестве оружия против солдат тирана.",
    #     "Лорд отменил непопулярный закон после того как я выступил с акцией протеста.",
    #     "Небожитель, фея или другое подобное существо благословило меня или открыло тайну моего рождения.",
    #     "Вступив в армию лорда, я получил хорошее звание и заслужил благодарности."
    # ]
    #
    # for option in event_options:
    #     FeatureOption.objects.get_or_create(
    #         feature=defining_event_feature,
    #         name=option
    #     )

    # ____

    Feature.objects.get_or_create(
        background=background,
        name="УМЕНИЕ: ГОРОДСКИЕ ТАЙНЫ",
        description="""Вы знаете тайные лазы и проходы городских улиц, позволяющие пройти там, где другие не увидят пути. Вне боя вы (и ведомые вами союзники) можете перемещаться по городу вдвое быстрее обычного.""",
    )

    # Создаем черты характера
    traits_data = [
        "В моих карманах полно побрякушек и объедков.",
        "Я задаю очень много вопросов.",
        "Я часто забиваюсь в узкие закутки, где никто не сможет добраться до меня.",
        "Я всегда сплю, прижавшись спиной к стене или дереву, сжимая узелок со всеми своими пожитками в руках.",
        "Я не воспитан, и ем как свинья.",
        "Я убеждён, что все, кто проявляют доброту ко мне, на самом деле скрывают злые намерения.",
        "Я не люблю мыться.",
        "Я прямо говорю о том, на что прочие предпочитают лишь намекнуть, или промолчать."
    ]

    for trait_name in traits_data:
        Trait.objects.get_or_create(
            background=background,
            name=trait_name
        )

    # Создаем идеалы
    ideals_data = [
        "Уважение. Нужно относиться друг к другу с достоинством и уважением. (Добрый)",
        "Справедливость. Закон не должен делать ни для кого исключений, и никто не может стать выше закона. (Законный)",
        "Свобода. Тираны не должны угнетать народ. (Хаотичный)",
        "Мощь. Если я стану сильным, я смогу брать то, что захочу — и я это заслуживаю. (Злой)",
        "Искренность. Нет ничего хорошего в том, что ты притворяешься тем, кем не являешься. (Нейтральный)",
        "Судьба. Никто и ничто не собьёт меня с пути к высшему призванию. (Любое)"
    ]

    for ideal_name in ideals_data:
        Ideal.objects.get_or_create(
            background=background,
            name=ideal_name
        )

    # Создаем привязанности
    bonds_data = [
        "У меня есть семья, но я не знаю, где она. Надеюсь, когда-нибудь я увижу их вновь.",
        "Я работал на земле, я люблю землю, и я буду защищать землю.",
        "Один благородный меня дико поколотил, и я вымещаю свой гнев на всех встреченных задирах.",
        "Мои инструменты — символ моей былой жизни, и я ношу их, чтобы не забывать корни.",
        "Я защищаю тех, кто не может защитить себя сам.",
        "Хотел бы я, чтобы та, кого я любил в детстве, разделила со мной судьбу."
    ]

    for bond_name in bonds_data:
        Bond.objects.get_or_create(
            background=background,
            name=bond_name
        )

    # Создаем слабости
    flaws_data = [
        "Тиран, правящий моими землями, ни перед чем не остановится, лишь бы убить меня.",
        "Я слепо верю в своё предназначение, и не замечаю ни своих недостатков, ни смертельных опасностей.",
        "Те, кто знают меня молодым, знают и мою самую постыдную тайну, так что я никогда не вернусь домой.",
        "Я беззащитен перед пороками большого города, особенно перед пьянством.",
        "Я тайно считаю, что было бы хорошо стать тираном, правящим землями.",
        "Я не доверяю союзникам."
    ]

    for flaw_name in flaws_data:
        Flaw.objects.get_or_create(
            background=background,
            name=flaw_name
        )
